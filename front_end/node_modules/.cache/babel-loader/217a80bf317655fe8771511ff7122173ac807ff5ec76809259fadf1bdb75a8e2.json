{"ast":null,"code":"var _jsxFileName = \"/home/techwin/Desktop/shubhamNode/Assignment/front_end/src/components/JuniorDeveloper.js\",\n  _s = $RefreshSig$();\n/**\n * Here we Import packages\n */\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\nimport { handleFetchData } from \"../API/GetUsers\";\nimport { handleEdit } from \"../API/EditUser\";\nimport { handleDelete } from \"../API/DeleteUsers\";\n\n/*This function render Junior data Table*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JuniorDeveloper = _ref => {\n  _s();\n  let {\n    value,\n    updated\n  } = _ref;\n  const [data, setData] = useState([]); /* Fetched Data will be stored in data as array */\n  const [editingRow, setEditingRow] = useState(null); /*Its render when we click on edit button */\n  const [alert, setAlert] = useState(null); /* It will render when we click on delete button */\n\n  const handleEditClick = row => {\n    setEditingRow(row);\n  };\n\n  /**\n   * Fetching data from API and storing it in data field.\n   */\n  const fetchData = async () => {\n    const detail = await handleFetchData(\"Junior Developer\");\n    setData(detail.data);\n  };\n\n  /**\n   * Its first render when page reload\n   */\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /**\n   * When something find in value or changes it will be reloaded\n   */\n  useEffect(() => {\n    if (value === \"Junior Developer\") {\n      fetchData();\n      updated('');\n    }\n  }, [value]);\n\n  /**\n   * @param {*} deleteRow \n   * Popup will show and execute on the delete button \n   */\n  const handleDeleteClick = deleteRow => {\n    setAlert({\n      message: `Are you sure you want to delete ${deleteRow.firstName} ${deleteRow.lastName}?`,\n      onConfirm: async () => {\n        await handleDelete(deleteRow._id);\n        fetchData();\n        setAlert(null);\n      },\n      onCancel: () => {\n        setAlert(null);\n      }\n    });\n  };\n\n  /** \n   * @param {*} newRow\n   * On Clickedit form submit its update on database by fetching API \n   */\n  const handleFormSubmit = async newRow => {\n    setData(data => data.map(row => row.id === editingRow.id ? {\n      ...row,\n      ...newRow\n    } : row));\n    await handleEdit(editingRow._id, newRow);\n    updated(newRow.positionId._id);\n    fetchData();\n    setEditingRow(null);\n  };\n\n  /**\n   * On Edit Form click on cancel its hide form to show\n   */\n  const handleFormCancel = () => {\n    setEditingRow(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [alert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: alert.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: alert.onConfirm,\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: alert.onCancel,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), editingRow && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          editingRow: editingRow,\n          onSubmit: handleFormSubmit,\n          onCancel: handleFormCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        name: \"Junior Developer\",\n        data: data,\n        onEditClick: handleEditClick,\n        onDeleteClick: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(JuniorDeveloper, \"g+wKjoetDSu3AVBBeWd+ggRbt4k=\");\n_c = JuniorDeveloper;\nexport default JuniorDeveloper;\nvar _c;\n$RefreshReg$(_c, \"JuniorDeveloper\");","map":{"version":3,"names":["React","useState","useEffect","Form","Table","handleFetchData","handleEdit","handleDelete","jsxDEV","_jsxDEV","Fragment","_Fragment","JuniorDeveloper","_ref","_s","value","updated","data","setData","editingRow","setEditingRow","alert","setAlert","handleEditClick","row","fetchData","detail","handleDeleteClick","deleteRow","message","firstName","lastName","onConfirm","_id","onCancel","handleFormSubmit","newRow","map","id","positionId","handleFormCancel","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","name","onEditClick","onDeleteClick","_c","$RefreshReg$"],"sources":["/home/techwin/Desktop/shubhamNode/Assignment/front_end/src/components/JuniorDeveloper.js"],"sourcesContent":["/**\n * Here we Import packages\n */\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport Table from \"./Table\";\nimport { handleFetchData } from \"../API/GetUsers\";\nimport { handleEdit } from \"../API/EditUser\";\nimport { handleDelete } from \"../API/DeleteUsers\";\n\n/*This function render Junior data Table*/\nconst JuniorDeveloper = ({ value, updated }) => {\n\n    const [data, setData] = useState([]); /* Fetched Data will be stored in data as array */\n    const [editingRow, setEditingRow] = useState(null); /*Its render when we click on edit button */\n    const [alert, setAlert] = useState(null); /* It will render when we click on delete button */\n\n    const handleEditClick = (row) => {\n        setEditingRow(row);\n    };\n\n    /**\n     * Fetching data from API and storing it in data field.\n     */\n    const fetchData = async () => {\n        const detail = await handleFetchData(\"Junior Developer\");\n        setData(detail.data);\n    }\n\n    /**\n     * Its first render when page reload\n     */\n    useEffect(() => {\n        fetchData();\n    }, [])\n\n    /**\n     * When something find in value or changes it will be reloaded\n     */\n    useEffect(() => {\n        if (value === \"Junior Developer\") {\n            fetchData();\n            updated('')\n        }\n    }, [value])\n\n    /**\n     * @param {*} deleteRow \n     * Popup will show and execute on the delete button \n     */\n    const handleDeleteClick = (deleteRow) => {\n        setAlert({\n            message: `Are you sure you want to delete ${deleteRow.firstName} ${deleteRow.lastName}?`,\n            onConfirm: async () => {\n                await handleDelete(deleteRow._id)\n                fetchData();\n                setAlert(null);\n            },\n            onCancel: () => {\n                setAlert(null);\n            },\n        });\n    };\n\n \n    /** \n     * @param {*} newRow\n     * On Clickedit form submit its update on database by fetching API \n     */\n    const handleFormSubmit = async(newRow) => {\n        setData((data) =>\n            data.map((row) => (row.id === editingRow.id ? { ...row, ...newRow } : row))\n        );\n        await handleEdit(editingRow._id, newRow);\n        updated(newRow.positionId._id)\n        fetchData();\n        setEditingRow(null);\n\n    };\n\n    /**\n     * On Edit Form click on cancel its hide form to show\n     */\n    const handleFormCancel = () => {\n        setEditingRow(null);\n    };\n    return (<>\n        <div className=\"App\">\n            {alert && (\n                <div className=\"alert\">\n                    <div>\n                        <p>{alert.message}</p>\n                        <button onClick={alert.onConfirm}>Yes</button>\n                        <button onClick={alert.onCancel}>No</button>\n                    </div>\n                </div>\n            )}\n            {editingRow && (\n                <div className=\"dialog\">\n                    <Form editingRow={editingRow} onSubmit={handleFormSubmit} onCancel={handleFormCancel} />\n                </div>\n            )}\n            <Table name=\"Junior Developer\" data={data} onEditClick={handleEditClick} onDeleteClick={handleDeleteClick} />\n        </div></>)\n}\n\nexport default JuniorDeveloper;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}